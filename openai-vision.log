2024-06-06 08:46:17,190 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=None, json=True
2024-06-06 08:46:17,581 - Sending prompt to OpenAI API: 
2024-06-06 08:46:26,103 - Received response from OpenAI API: {'id': 'chatcmpl-9WroT057yVi1em5wJCHGFa1KDHLYs', 'object': 'chat.completion', 'created': 1717620381, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': "The image shows an indoor living space that appears to be a living room. The room is dimly lit with a few spotlights. Here are some notable elements in the room:\n\n1. **Corner Sofa**: A black leather sectional sofa with some cushions on it.\n2. **Coffee Table**: A round wooden coffee table in front of the sofa, which has some items on it, including what appears to be a remote control.\n3. **Curtains**: Dark-colored curtains covering the windows.\n4. **Telescope**: A telescope is set up on a tripod near the right side of the image.\n5. **TV Stand**: A wooden TV stand, possibly with a television on top of it, although it's not entirely visible in the image.\n6. **Wall-mounted Lights**: There are a few wall-mounted lights providing illumination.\n7. **Record Player**: On the left side, there is a setup that appears to be a record player on a stand with some records underneath.\n\nThe room has a minimalist and modern décor, with a focus on functionality."}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1112, 'completion_tokens': 219, 'total_tokens': 1331}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 08:52:25,299 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=None, json=True
2024-06-06 08:52:25,882 - Sending prompt to OpenAI API: 
2024-06-06 08:52:32,549 - Received response from OpenAI API: {'id': 'chatcmpl-9WruPzsGXvLMaHBLqLPd9JrmZuaPV', 'object': 'chat.completion', 'created': 1717620749, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': 'The image shows a cozy living room with the following features:\n\n1. **Furniture:**\n   - There is a black leather sectional sofa with several cushions.\n   - A round wooden coffee table with a few items on it.\n   - A low wooden unit under the TV on the right.\n\n2. **Lighting:**\n   - The room is lit by ceiling lights and wall-mounted lights.\n\n3. **Decor:**\n   - Curtains covering the windows.\n   - A telescope standing on a tripod near the right side of the room.\n\n4. **Electronics:**\n   - A TV placed on a low unit on the right side.\n   - Some equipment that appears to be DJ turntables set up on the left side on top of a cabinet.\n\nThe room has a comfortable and well-organized feel, suitable for relaxation and leisure activities such as watching TV or stargazing with the telescope.'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1112, 'completion_tokens': 180, 'total_tokens': 1292}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 08:58:03,323 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 08:58:04,174 - Sending prompt to OpenAI API: 
2024-06-06 08:58:12,871 - Received response from OpenAI API: {'id': 'chatcmpl-9Wrzrh9QHJKoljJqo2exxMv0CxMiO', 'object': 'chat.completion', 'created': 1717621087, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': "This image depicts a living room setting with the following details:\n\n1. **Furniture:**\n   - A black leather sectional sofa with various pillows adorned with different patterns.\n   - A wooden coffee table in front of the sofa, with a few items on it including a coaster and other small objects.\n\n2. **Lighting and Windows:**\n   - Two windows with curtains covering them, likely to minimize outside light.\n   - A ceiling light providing illumination to the room.\n   - Wall-mounted lights located above the sofa and next to the turntables that are contributing to the room's lighting.\n\n3. **Additional Features:**\n   - There is a table or stand set up with DJ equipment, including turntables and a mixer.\n   - A telescope mounted on a tripod is positioned in the room, suggesting that someone might be interested in stargazing or observing distant terrestrial objects.\n   - The room appears to be neat and orderly, with a few personal items on the coffee table and the stand beside the sofa.\n\nThe overall decor suggests an interest in music and possibly astronomy, indicated by the presence of the DJ equipment and the telescope. The space seems comfortable and designed for relaxation and leisure activities."}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1112, 'completion_tokens': 238, 'total_tokens': 1350}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:01:42,716 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 09:01:42,758 - Loaded prompt for lightsensor_livingroom: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off.
2024-06-06 09:01:42,758 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:01:43,035 - Sending prompt to OpenAI API: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:01:49,138 - Received response from OpenAI API: {'id': 'chatcmpl-9Ws3P3x1JZiHlOwK6kWTvANU3GfBa', 'object': 'chat.completion', 'created': 1717621307, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "lightsensor_livingroom.dj_lights": "on",\n  "lightsensor_livingroom.ceiling_lights": "on"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1272, 'completion_tokens': 35, 'total_tokens': 1307}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:02:20,160 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=Kitchen, style=Gordon_Ramsey, json=False
2024-06-06 09:02:20,199 - Loaded prompt for Kitchen: I want you to look at the kitchen in this picture, and give it a rating from 1 (poor) to 10 (outstanding). Then write a paragraph describing the cleanliness of the kitchen. Make the output in a single line of text with no carriage returns or unusual characters
2024-06-06 09:02:20,200 - Loaded style for Gordon_Ramsey: You are to assume the personality of Gordon Ramsey and write the response in character as if Gordon were reading it himself. You can be as cheeky, candid or nsfw as you like, I don't mind a good roasting!
2024-06-06 09:02:21,494 - Combined prompt text: I want you to look at the kitchen in this picture, and give it a rating from 1 (poor) to 10 (outstanding). Then write a paragraph describing the cleanliness of the kitchen. Make the output in a single line of text with no carriage returns or unusual characters You are to assume the personality of Gordon Ramsey and write the response in character as if Gordon were reading it himself. You can be as cheeky, candid or nsfw as you like, I don't mind a good roasting!
2024-06-06 09:02:21,496 - Sending prompt to OpenAI API: I want you to look at the kitchen in this picture, and give it a rating from 1 (poor) to 10 (outstanding). Then write a paragraph describing the cleanliness of the kitchen. Make the output in a single line of text with no carriage returns or unusual characters You are to assume the personality of Gordon Ramsey and write the response in character as if Gordon were reading it himself. You can be as cheeky, candid or nsfw as you like, I don't mind a good roasting!
2024-06-06 09:02:31,055 - Received response from OpenAI API: {'id': 'chatcmpl-9Ws44nbQpMlFWY9OmRFFevldlb8aR', 'object': 'chat.completion', 'created': 1717621348, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': "I’d give this kitchen a 6 out of 10. Listen, mate, it's not a complete disaster but it’s definitely not winning any awards either! For crying out loud, you’ve got a pan left on the sink, a chopping board still out, and what’s this, glasses just lying around like someone’s thrown a frat party? Honestly, this place looks like it’s halfway between making a decent meal and deciding to abandon ship! Get it together!"}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 874, 'completion_tokens': 94, 'total_tokens': 968}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:06:45,587 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=False
2024-06-06 09:06:45,628 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 09:06:45,629 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:06:54,473 - Combined prompt text: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:06:54,475 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:06:58,498 - Received response from OpenAI API: {'id': 'chatcmpl-9Ws8PgceCHrkKCZA8PKp6A8OnItdO', 'object': 'chat.completion', 'created': 1717621617, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Unmade"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 14, 'total_tokens': 578}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:08:03,239 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=wherearemyglasses, style=BBC, json=False
2024-06-06 09:08:03,280 - Loaded prompt for wherearemyglasses: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are
2024-06-06 09:08:03,281 - Loaded style for BBC: Your response will be read aloud, so it should be written in the style of a BBC Presenter, very formal and correct.
2024-06-06 09:08:04,546 - Combined prompt text: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are Your response will be read aloud, so it should be written in the style of a BBC Presenter, very formal and correct.
2024-06-06 09:08:04,548 - Sending prompt to OpenAI API: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are Your response will be read aloud, so it should be written in the style of a BBC Presenter, very formal and correct.
2024-06-06 09:08:08,931 - Received response from OpenAI API: {'id': 'chatcmpl-9Ws9XvCcznsij9ftPq3EIk7DUKYBG', 'object': 'chat.completion', 'created': 1717621687, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': 'In this particular photograph, one can observe a modern kitchen setting. If one directs their attention to the kitchen island in the foreground, positioned centrally, a pair of glasses can be seen resting upon the white countertop, adjacent to a packet of sliced bread and opposite a set of white stools. This should facilitate the retrieval of the aforementioned spectacles.'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 831, 'completion_tokens': 67, 'total_tokens': 898}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:11:11,032 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=wherearemyglasses, style=Jarvis, json=False
2024-06-06 09:11:11,072 - Loaded prompt for wherearemyglasses: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are
2024-06-06 09:11:11,072 - Loaded style for Jarvis: You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:11,923 - Combined prompt text: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:11,927 - Sending prompt to OpenAI API: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:16,836 - Received response from OpenAI API: {'id': 'chatcmpl-9WsCaKUO0GdNM7In6qUBVZrHSZr8i', 'object': 'chat.completion', 'created': 1717621876, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': 'I found your glasses. They are on the kitchen island countertop, near the glass of water and the frying pan.'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 862, 'completion_tokens': 23, 'total_tokens': 885}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:11:45,707 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=wherearemyglasses, style=Jarvis, json=False
2024-06-06 09:11:45,749 - Loaded prompt for wherearemyglasses: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are
2024-06-06 09:11:45,750 - Loaded style for Jarvis: You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:46,640 - Combined prompt text: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:46,643 - Sending prompt to OpenAI API: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:11:54,180 - Received response from OpenAI API: {'id': 'chatcmpl-9WsDA25KPnqksHtdspRSuQxlWfjnf', 'object': 'chat.completion', 'created': 1717621912, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': "I've scanned the provided image of your kitchen, but I do not see a pair of glasses on the counter or in the immediate surrounding area. Consider checking other rooms or common places where you might lay down your glasses. If there's anything else you need help locating or any other assistance required, feel free to ask!"}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 862, 'completion_tokens': 62, 'total_tokens': 924}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:12:29,668 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=wherearemyglasses, style=Jarvis, json=False
2024-06-06 09:12:29,712 - Loaded prompt for wherearemyglasses: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are
2024-06-06 09:12:29,712 - Loaded style for Jarvis: You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:12:30,813 - Combined prompt text: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:12:30,815 - Sending prompt to OpenAI API: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:12:35,708 - Received response from OpenAI API: {'id': 'chatcmpl-9WsDqP6t3mRNHsWkWT4PTvfaVbqZe', 'object': 'chat.completion', 'created': 1717621954, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': 'I have located what appear to be your glasses in the image. They are on the kitchen countertop, slightly to the left of the sink, near the other items on the counter.\n\nWould you like me to send a notification to your phone or display this information on your wall-mounted tablet in the living room?'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 862, 'completion_tokens': 61, 'total_tokens': 923}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:13:19,911 - Command line arguments: model=gpt-4o, camera=camera.kitchen_camera, prompt=wherearemyglasses, style=Jarvis, json=False
2024-06-06 09:13:19,951 - Loaded prompt for wherearemyglasses: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are
2024-06-06 09:13:19,951 - Loaded style for Jarvis: You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:13:20,888 - Combined prompt text: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:13:20,890 - Sending prompt to OpenAI API: Ive lost my glasses - the type you wear on your face, not for drinking out of. Please search for them in this photo, and tell me where they are You are a home AI like Jarvis from the movie Ironman. You run on a home assistant server with access to cameras and entities around the home, and you communicate through smart speakers throughout the house, text message notifications, and a wall mounted tablet dashboard in the living room.
2024-06-06 09:13:26,553 - Received response from OpenAI API: {'id': 'chatcmpl-9WsEfsnV9AEVLoMAjDsnDdaWFn4F1', 'object': 'chat.completion', 'created': 1717622005, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': 'I see your glasses on the kitchen counter next to the sink. They are to the left of a glass of water.'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 862, 'completion_tokens': 24, 'total_tokens': 886}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:13:51,138 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=True
2024-06-06 09:13:51,181 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 09:13:51,181 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:14:00,072 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:14:02,629 - Received response from OpenAI API: {'id': 'chatcmpl-9WsFGUZ46fK7hqBHiCmjYky5T91qr', 'object': 'chat.completion', 'created': 1717622042, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Unmade"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 14, 'total_tokens': 578}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:31:01,487 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=True
2024-06-06 09:31:01,526 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 09:31:01,527 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:31:10,378 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:31:14,880 - Received response from OpenAI API: {'id': 'chatcmpl-9WsVu8Sau9dWKBcyql2nL5O2iV3Zr', 'object': 'chat.completion', 'created': 1717623074, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Unmade"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 14, 'total_tokens': 578}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:31:14,885 - Error decoding JSON: Expecting value: line 1 column 1 (char 0)
2024-06-06 09:47:35,338 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=True
2024-06-06 09:47:35,380 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 09:47:35,381 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:47:44,536 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:47:47,181 - Received response from OpenAI API: {'id': 'chatcmpl-9Wslu3mlF8Pdm158ROypc3hkfwYUr', 'object': 'chat.completion', 'created': 1717624066, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Unmade"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 14, 'total_tokens': 578}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 09:48:47,733 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 09:48:47,774 - Loaded prompt for lightsensor_livingroom: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off.
2024-06-06 09:48:47,775 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:48:48,039 - Sending prompt to OpenAI API: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 09:48:54,253 - Received response from OpenAI API: {'id': 'chatcmpl-9WsmyvHs8l7lgNp1IYteT844QddXg', 'object': 'chat.completion', 'created': 1717624132, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "lightsensor_livingroom.dj_lights": "on",\n  "lightsensor_livingroom.ceiling_lights": "on"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1272, 'completion_tokens': 35, 'total_tokens': 1307}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 10:25:50,204 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 10:25:50,243 - Loaded prompt for lightsensor_livingroom: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off.
2024-06-06 10:25:50,244 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:25:50,606 - Sending prompt to OpenAI API: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:25:55,955 - Received response from OpenAI API: {'id': 'chatcmpl-9WtMoNQzx2WW23fziFyhmm0MA5s4d', 'object': 'chat.completion', 'created': 1717626354, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "lightsensor_livingroom.dj_lights": "on",\n  "lightsensor_livingroom.ceiling_lights": "on"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1272, 'completion_tokens': 35, 'total_tokens': 1307}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 10:26:15,220 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 10:26:15,260 - Loaded prompt for lightsensor_livingroom: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off.
2024-06-06 10:26:15,260 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:26:15,627 - Sending prompt to OpenAI API: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:26:20,892 - Received response from OpenAI API: {'id': 'chatcmpl-9WtNDNkNEj5VrYDxhaKY6xN699q6C', 'object': 'chat.completion', 'created': 1717626379, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "lightsensor_livingroom.dj_lights": "off",\n  "lightsensor_livingroom.ceiling_lights": "on"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1272, 'completion_tokens': 35, 'total_tokens': 1307}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 10:26:45,881 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=True
2024-06-06 10:26:45,920 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 10:26:45,920 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:26:55,905 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:26:59,186 - Received response from OpenAI API: {'id': 'chatcmpl-9WtNqavXCovwJgLXKENfHInvZ1PVe', 'object': 'chat.completion', 'created': 1717626418, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Unmade"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 14, 'total_tokens': 578}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 10:51:08,343 - Command line arguments: model=gpt-4o, camera=camera.living_room_camera, prompt=lightsensor_livingroom, style=json, json=True
2024-06-06 10:51:08,383 - Loaded prompt for lightsensor_livingroom: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off.
2024-06-06 10:51:08,384 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:51:08,658 - Sending prompt to OpenAI API: In this picture there are 2 sets of lights. On the roof are the Ceiling Lights, and in the distance on the far wall and the wall to the left are a set of lights named DJ Lights. I want you to determine if the lights are on or off, and return the json response lightsensor_livingroom.dj_lights: on/off and lightsensor_livingroom.ceiling_lights: on/off, choosing on or off depending on what you see. If the lights are on you should be able to see bright spots where I have described, otherwise you should just see the light fixtures. If the screen is completely dark, mark all lights as off. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 10:51:14,530 - Received response from OpenAI API: {'id': 'chatcmpl-9WtlJkIe8IblU2pdPhah7L3VPqd7S', 'object': 'chat.completion', 'created': 1717627873, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "lightsensor_livingroom.dj_lights": "on",\n  "lightsensor_livingroom.ceiling_lights": "off"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 1272, 'completion_tokens': 35, 'total_tokens': 1307}, 'system_fingerprint': 'fp_aa87380ac5'}
2024-06-06 11:15:07,522 - Command line arguments: model=gpt-4o, camera=camera.webcam, prompt=bedstatus, style=json, json=True
2024-06-06 11:15:07,561 - Loaded prompt for bedstatus: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text.
2024-06-06 11:15:07,562 - Loaded style for json: Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 11:15:11,844 - Sending prompt to OpenAI API: I want you to look at this photo and respond with a simple response as follows. If the bed is unoccupied, decide if the bed is 'Made', 'Unmade', or 'Badly Made' and return one of these options as your response. If there is a person present, you should analyze what the person is doing, and respond with - Person Reading, Person using Devices, Person watching TV, Person Sleeping. Remember, just a 1-3 word response, exactly as I've described, with no additional text. Remember, the response should be in simple json with no other comments whatsoever. Entities should be listed with their state as described.
2024-06-06 11:15:15,061 - Received response from OpenAI API: {'id': 'chatcmpl-9Wu8YECQAYZnuT9BRhPA8Zsp6lTH7', 'object': 'chat.completion', 'created': 1717629314, 'model': 'gpt-4o-2024-05-13', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json\n{\n  "Bed": "Made"\n}\n```'}, 'logprobs': None, 'finish_reason': 'stop'}], 'usage': {'prompt_tokens': 564, 'completion_tokens': 13, 'total_tokens': 577}, 'system_fingerprint': 'fp_aa87380ac5'}
